blueprint:
  name: Azan Notifications - V2.0
  description: |
    ✨ **Azan Notifications + Optional Audio Playback - V2.0**
    **By [Shady Nafie — Smart Tech Arabic](https://smarttecharabic.com)**

    This blueprint sends Islamic prayer time notifications to your mobile device, and optionally plays the Azan on a selected media player.

    ✨ **Key Features:**
      - 📱 High-priority mobile notifications for all 5 daily prayers
      - 🔊 Optional Adhan audio playback with volume control
      - 🎵 Support for Google Cast, HomePod, Sonos, and Alexa (via Plex)


    📋 **Requirements:**
      - 📱 Home Assistant Companion App on your mobile device
      - 🕌 Islamic Prayer Times integration
      - 🎵 Plex Media Server (required only for Alexa audio playback)

    ⚠️ **Note:** Alexa requires Plex integration for audio playback.

  domain: automation
  source_url: https://github.com/shadynafie/home-assistant-blueprints/blob/main/blueprints/automation/smarttecharabic/azan-notifications/azan_notifications.yaml

  input:
    # ————————————————————————————————————————
    # Notification target
    # ————————————————————————————————————————
    notify_devices:
      name: 📲 Mobile Devices
      selector:
        device:
          filter:
            - integration: mobile_app
          multiple: true

    # ————————————————————————————————————————
    # Prayer‑time sensors
    # ————————————————————————————————————————
    fajr_sensor:
      name: 🌅 Fajr Time Sensor
    dhuhr_sensor:
      name: ☀️ Dhuhr Time Sensor
    asr_sensor:
      name: 🌤️ Asr Time Sensor
    maghrib_sensor:
      name: 🌅 Maghrib Time Sensor
    isha_sensor:
      name: 🌙 Isha Time Sensor

    # ————————————————————————————————————————
    # Enable / disable individual prayer alerts
    # ————————————————————————————————————————
    fajr_enabled:
      name: 🌅 Fajr Prayer
      default: true
      selector:
        boolean: {}
    dhuhr_enabled:
      name: ☀️ Dhuhr Prayer
      default: true
      selector:
        boolean: {}
    asr_enabled:
      name: 🌤️ Asr Prayer
      default: true
      selector:
        boolean: {}
    maghrib_enabled:
      name: 🌅 Maghrib Prayer
      default: true
      selector:
        boolean: {}
    isha_enabled:
      name: 🌙 Isha Prayer
      default: true
      selector:
        boolean: {}

    # ————————————————————————————————————————
    # Custom notification text
    # ————————————————————————————————————————
    notification_section:
      name: Custom Notification Text
      description: Edit the push-notification message for each prayer.
      icon: mdi:message-outline
      collapsed: true
      input:
        fajr_message:
          name: Fajr Custom Message
          default: Time for Fajr prayer – حان الآن موعد صلاة الفجر
          selector:
            text: {}
        dhuhr_message:
          name: Dhuhr Custom Message
          default: Time for Dhuhr prayer – حان الآن موعد صلاة الظهر
          selector:
            text: {}
        asr_message:
          name: Asr Custom Message
          default: Time for Asr prayer – حان الآن موعد صلاة العصر
          selector:
            text: {}
        maghrib_message:
          name: Maghrib Custom Message
          default: Time for Maghrib prayer – حان الآن موعد صلاة المغرب
          selector:
            text: {}
        isha_message:
          name: Isha Custom Message
          default: Time for Isha prayer – حان الآن موعد صلاة العشاء
          selector:
            text: {}

    # ————————————————————————————————————————
    # Adhan audio playback
    # ————————————————————————————————————————
    media_player_target:
      name: 🖥️ Target Media Player
      selector:
        entity:
          domain: media_player
          multiple: false
          include_entities: []
    volume_level:
      name: 🔊 Volume Level (0.0 to 1.0)
      default: 0.5
      selector:
        number:
          min: 0
          max: 1
          step: 0.01
          mode: slider
    media_player_type:
      name: 🎛️ Media Player Type
      default: direct_playback
      selector:
        select:
          options:
            - direct_playback
            - alexa_plex
    mp3_file:
      name: 🌍 MP3 File URL (for Direct Playback)
      default: ""
      selector:
        text: {}
    playlist_name:
      name: 🎵 Plex Playlist Name (for Alexa)
      default: ""
      selector:
        text: {}

    # ————————————————————————————————————————
    # Remind before prayer
    # ————————————————————————————————————————
    fajr_remind_before:
      name: Minutes before Fajr
      default: ""
      selector:
        text: {}
    dhuhr_remind_before:
      name: Minutes before Dhuhr
      default: ""
      selector:
        text: {}
    asr_remind_before:
      name: Minutes before Asr
      default: ""
      selector:
        text: {}
    maghrib_remind_before:
      name: Minutes before Maghrib
      default: ""
      selector:
        text: {}
    isha_remind_before:
      name: Minutes before Isha
      default: ""
      selector:
        text: {}

variables:
  volume: !input volume_level
  prayers:
    fajr:
      sensor: !input fajr_sensor
      enabled: !input fajr_enabled
      message: !input fajr_message
      title: "🌅 Fajr Prayer Time"
      icon: mdi:weather-sunset-up
      color: '#FFA726'
    dhuhr:
      sensor: !input dhuhr_sensor
      enabled: !input dhuhr_enabled
      message: !input dhuhr_message
      title: "☀️ Dhuhr Prayer Time"
      icon: mdi:weather-sunny
      color: '#FFD54F'
    asr:
      sensor: !input asr_sensor
      enabled: !input asr_enabled
      message: !input asr_message
      title: "🌤️ Asr Prayer Time"
      icon: mdi:weather-partly-cloudy
      color: '#FF8A65'
    maghrib:
      sensor: !input maghrib_sensor
      enabled: !input maghrib_enabled
      message: !input maghrib_message
      title: "🌅 Maghrib Prayer Time"
      icon: mdi:weather-sunset
      color: '#FF7043'
    isha:
      sensor: !input isha_sensor
      enabled: !input isha_enabled
      message: !input isha_message
      title: "🌙 Isha Prayer Time"
      icon: mdi:weather-night
      color: '#5C6BC0'
  fajr_remind_before: >
    {{ [int(x) for x in !input fajr_remind_before.split(',') if x|int >= 0] }}
  dhuhr_remind_before: >
    {{ [int(x) for x in !input dhuhr_remind_before.split(',') if x|int >= 0] }}
  asr_remind_before: >
    {{ [int(x) for x in !input asr_remind_before.split(',') if x|int >= 0] }}
  maghrib_remind_before: >
    {{ [int(x) for x in !input maghrib_remind_before.split(',') if x|int >= 0] }}
  isha_remind_before: >
    {{ [int(x) for x in !input isha_remind_before.split(',') if x|int >= 0] }}

trigger:
  - platform: time
    at: !input fajr_sensor
    id: fajr
  - platform: time
    at: !input dhuhr_sensor
    id: dhuhr
  - platform: time
    at: !input asr_sensor
    id: asr
  - platform: time
    at: !input maghrib_sensor
    id: maghrib
  - platform: time
    at: !input isha_sensor
    id: isha
  - platform: template
    id: fajr_reminder
    value_template: >
      {{ (as_timestamp(states('!input fajr_sensor')) - (fajr_remind_before * 60)) | timestamp_custom('%H:%M:%S', False) == now().strftime('%H:%M:%S') }}
  - platform: template
    id: dhuhr_reminder
    value_template: >
      {{ (as_timestamp(states('!input dhuhr_sensor')) - (dhuhr_remind_before * 60)) | timestamp_custom('%H:%M:%S', False) == now().strftime('%H:%M:%S') }}
  - platform: template
    id: asr_reminder
    value_template: >
      {{ (as_timestamp(states('!input asr_sensor')) - (asr_remind_before * 60)) | timestamp_custom('%H:%M:%S', False) == now().strftime('%H:%M:%S') }}
  - platform: template
    id: maghrib_reminder
    value_template: >
      {{ (as_timestamp(states('!input maghrib_sensor')) - (maghrib_remind_before * 60)) | timestamp_custom('%H:%M:%S', False) == now().strftime('%H:%M:%S') }}
  - platform: template
    id: isha_reminder
    value_template: >
      {{ (as_timestamp(states('!input isha_sensor')) - (isha_remind_before * 60)) | timestamp_custom('%H:%M:%S', False) == now().strftime('%H:%M:%S') }}
  # Fajr reminders (expand as needed)
  - platform: template
    id: fajr_reminder_1
    value_template: >
      {{ 1 in fajr_remind_before and
         (as_timestamp(states('!input fajr_sensor')) - 60) | timestamp_custom('%H:%M:%S', False) == now().strftime('%H:%M:%S') }}
  - platform: template
    id: fajr_reminder_5
    value_template: >
      {{ 5 in fajr_remind_before and
         (as_timestamp(states('!input fajr_sensor')) - 300) | timestamp_custom('%H:%M:%S', False) == now().strftime('%H:%M:%S') }}
  - platform: template
    id: fajr_reminder_10
    value_template: >
      {{ 10 in fajr_remind_before and
         (as_timestamp(states('!input fajr_sensor')) - 600) | timestamp_custom('%H:%M:%S', False) == now().strftime('%H:%M:%S') }}
  # Repeat for other prayers and minutes

condition:
  - condition: template
    value_template: '{{ prayers[trigger.id].enabled }}'

action:
  - choose:
      - conditions: "{{ trigger.id == 'fajr_reminder' }}"
        sequence:
          - device_id: !input notify_device
            domain: mobile_app
            type: notify
            title: "⏰ Fajr Reminder"
            message: "Fajr prayer is in {{ fajr_remind_before }} minutes."
            data:
              channel: prayer_notifications
              importance: high
              persistent: false
              sticky: false
      - conditions: "{{ trigger.id == 'dhuhr_reminder' }}"
        sequence:
          - device_id: !input notify_device
            domain: mobile_app
            type: notify
            title: "⏰ Dhuhr Reminder"
            message: "Dhuhr prayer is in {{ dhuhr_remind_before }} minutes."
            data:
              channel: prayer_notifications
              importance: high
              persistent: false
              sticky: false
      - conditions: "{{ trigger.id == 'asr_reminder' }}"
        sequence:
          - device_id: !input notify_device
            domain: mobile_app
            type: notify
            title: "⏰ Asr Reminder"
            message: "Asr prayer is in {{ asr_remind_before }} minutes."
            data:
              channel: prayer_notifications
              importance: high
              persistent: false
              sticky: false
      - conditions: "{{ trigger.id == 'maghrib_reminder' }}"
        sequence:
          - device_id: !input notify_device
            domain: mobile_app
            type: notify
            title: "⏰ Maghrib Reminder"
            message: "Maghrib prayer is in {{ maghrib_remind_before }} minutes."
            data:
              channel: prayer_notifications
              importance: high
              persistent: false
              sticky: false
      - conditions: "{{ trigger.id == 'isha_reminder' }}"
        sequence:
          - device_id: !input notify_device
            domain: mobile_app
            type: notify
            title: "⏰ Isha Reminder"
            message: "Isha prayer is in {{ isha_remind_before }} minutes."
            data:
              channel: prayer_notifications
              importance: high
              persistent: false
              sticky: false
      - conditions: "{{ trigger.id == 'fajr_reminder_1' }}"
        sequence:
          - repeat:
              for_each: !input notify_devices
              sequence:
                - device_id: "{{ repeat.item }}"
                  domain: mobile_app
                  type: notify
                  title: "⏰ Fajr Reminder"
                  message: "Fajr prayer is in 1 minute."
                  data:
                    channel: prayer_notifications
                    importance: high
                    persistent: false
                    sticky: false
      - conditions: "{{ trigger.id == 'fajr_reminder_5' }}"
        sequence:
          - repeat:
              for_each: !input notify_devices
              sequence:
                - device_id: "{{ repeat.item }}"
                  domain: mobile_app
                  type: notify
                  title: "⏰ Fajr Reminder"
                  message: "Fajr prayer is in 5 minutes."
                  data:
                    channel: prayer_notifications
                    importance: high
                    persistent: false
                    sticky: false
      - conditions: "{{ trigger.id == 'fajr_reminder_10' }}"
        sequence:
          - repeat:
              for_each: !input notify_devices
              sequence:
                - device_id: "{{ repeat.item }}"
                  domain: mobile_app
                  type: notify
                  title: "⏰ Fajr Reminder"
                  message: "Fajr prayer is in 10 minutes."
                  data:
                    channel: prayer_notifications
                    importance: high
                    persistent: false
                    sticky: false
      # Repeat for other prayers and minutes
  - repeat:
      for_each: !input notify_devices
      sequence:
        - device_id: "{{ repeat.item }}"
          domain: mobile_app
          type: notify
          title: '{{ prayers[trigger.id].title }}'
          message: '{{ prayers[trigger.id].message }}'
          data:
            notification_icon: '{{ prayers[trigger.id].icon }}'
            color: '{{ prayers[trigger.id].color }}'
            channel: prayer_notifications
            importance: high
            persistent: true
            sticky: true
            timeout: 0
            actions:
              - action: MARK_PRAYED
                title: Mark as Prayed
                icon: sfsymbols:checkmark.circle
              - action: SNOOZE_PRAYER
                title: Remind me in 5 min
                icon: sfsymbols:clock

  - variables:
      media_type: !input media_player_type
      mp3_url: !input mp3_file
      playlist: !input playlist_name

  - choose:
      - conditions:
          - condition: template
            value_template: "{{ media_type == 'direct_playback' }}"
        sequence:
          - service: media_player.volume_set
            target:
              entity_id: !input media_player_target
            data:
              volume_level: "{{ volume }}"
          - service: media_player.play_media
            target:
              entity_id: !input media_player_target
            data:
              media_content_type: music
              media_content_id: "{{ mp3_url }}"
      - conditions:
          - condition: template
            value_template: "{{ media_type == 'alexa_plex' }}"
        sequence:
          - service: media_player.volume_set
            target:
              entity_id: !input media_player_target
            data:
              volume_level: "{{ volume }}"
          - service: media_player.play_media
            target:
              entity_id: !input media_player_target
            data:
              media_content_type: custom
              media_content_id: "Ask Plex to play playlist {{ playlist }}"

mode: parallel
max_exceeded: silent
